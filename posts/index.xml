<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on LeVarez</title>
    <link>https://LeVarez.github.io/posts/</link>
    <description>Recent content in Posts on LeVarez</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <lastBuildDate>Wed, 08 Dec 2021 12:37:40 +0100</lastBuildDate><atom:link href="https://LeVarez.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Prototype Pollution</title>
      <link>https://LeVarez.github.io/posts/prototypepollution/</link>
      <pubDate>Wed, 08 Dec 2021 12:37:40 +0100</pubDate>
      
      <guid>https://LeVarez.github.io/posts/prototypepollution/</guid>
      <description>Prototype PollutionPrimero de todo, ¿qué es la contaminación prototype? ¿Como puede comprometer la seguridad de nuestro sistema?
Este tipo de ataque se lleva a cavo en el lenguaje de programación JavaScript, ya que este mismo es prototype-based. Todos los nuevos objetos que se crean llevan las propiedades y métodos del objeto prototype, el cual contiene funcionalidades básicas como toString(), constructor() y hasOwnProperty().
Los atacantes puedes hacer uso de esta característica del lenguaje para poder hacer cambios a todos los objetos de la aplicación haciendo una modificación al objeto prototype.</description>
    </item>
    
  </channel>
</rss>
